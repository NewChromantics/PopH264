#include "../Source/Version.xcconfig"

//	this should add bitcode, but doesnt without BITCODE_GENERATION_MODE
//OTHER_CFLAGS = -Wno-ambiguous-macro -fembed-bitcode
//OTHER_LDFLAGS = -fembed-bitcode;
//ENABLE_BITCODE = YES
//BITCODE_GENERATION_MODE = bitcode

//	gr: NO bitcode from 2021
OTHER_CFLAGS = -Wno-ambiguous-macro
OTHER_LDFLAGS =
ENABLE_BITCODE = NO

CLANG_CXX_LANGUAGE_STANDARD = c++20
CLANG_CXX_LIBRARY = libc++
GCC_C_LANGUAGE_STANDARD = c99

BUILD_LIBRARY_FOR_DISTRIBUTION = YES

BROADWAY_PATH = $(SRCROOT)/Source/Broadway/Decoder
MAGICENUM_PATH = $(SRCROOT)/Source/SoyLib/src/magic_enum/include/magic_enum/


PRODUCT_BUNDLE_IDENTIFIER = com.NewChromantics.$(PRODUCT_NAME:rfc1034identifier)
PRODUCT_NAME = $(TARGET_NAME)

//	default clang warnings
CLANG_ENABLE_OBJC_WEAK = YES
CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES
CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES
CLANG_WARN_STRICT_PROTOTYPES = YES
CLANG_WARN_COMMA = YES
CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE
CLANG_WARN_RANGE_LOOP_ANALYSIS = YES
CLANG_WARN_SUSPICIOUS_MOVE = YES
CLANG_WARN_OBJC_LITERAL_CONVERSION = YES
CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES
CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES
CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE
MTL_FAST_MATH = YES
MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE
